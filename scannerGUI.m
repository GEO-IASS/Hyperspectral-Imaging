function varargout = scannerGUI(varargin)
    % GUI Initiation Function
    gui_Singleton = 1;
    gui_State = struct('gui_Name',       mfilename, ...
     'gui_Singleton',  gui_Singleton, ...
     'gui_OpeningFcn', @scannerGUI_OpeningFcn, ...
     'gui_OutputFcn',  @scannerGUI_OutputFcn, ...
     'gui_LayoutFcn',  @scannerGUI_LayoutFcn, ...
     'gui_Callback',   []);
    if nargin && ischar(varargin{1})
        gui_State.gui_Callback = str2func(varargin{1});
    end
    if nargout
        [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
    else
        gui_mainfcn(gui_State, varargin{:});
    end
end

function scannerGUI_OpeningFcn(hObject, eventdata, handles, varargin) %#ok<*INUSL>
    %Software initialization function - first function run
    % varargin   command line arguments to scannerGUI (see VARARGIN)
    % Choose default command line output for scannerGUI
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);
    global scannerObj;
    scannerObj = scanner();
end

function varargout = scannerGUI_OutputFcn(hObject, eventdata, handles) 
    % --- Outputs from this function are returned to the command line.
    % varargout  cell array for returning output args (see VARARGOUT);
    % Get default command line output from handles structure
    varargout{1} = handles.output;
end

% --- Executes on button press in darkReference.
function darkReference_Callback(hObject, eventdata, handles) %#ok<*DEFNU,*INUSD>
    global scannerObj;
    scannerObj.takeSet('dark')
    msgbox('Dark Set Taken and Saved')
end

% --- Executes on button press in connect.
function connect_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.connect();
    msgbox('Camera and Filter Connected')
end

% --- Executes on button press in disconnect.
function disconnect_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.disconnect();
    msgbox('Camera and Filter Disconnected')
end

% --- Executes on button press in singleImage.
function singleImage_Callback(~, eventdata, handles)
    global scannerObj;
    scannerObj.takePicture('sing', 0);
    msgbox('Image Taken and Saved')
end

% --- Executes on button press in imageSeries.
function imageSeries_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.takeSet('reg');
    msgbox('Image Series Taken and Saved')
end

function exposure_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = str2double(get(hObject, 'String'));
    scannerObj.setExposure(input);
    msgbox('Exposure Time Modified')
end

% --- Executes during object creation, after setting all properties.
function exposure_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

function wavelength_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = str2double(get(hObject, 'String'));
    scannerObj.setWavelength(input)
    msgbox('Wavelength Modified')
end

% --- Executes during object creation, after setting all properties.
function wavelength_CreateFcn(hObject, eventdata, ~)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

function location_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = get(hObject, 'String');
    scannerObj.setSaveLocation(input);
end

% --- Executes during object creation, after setting all properties.
function location_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

function gain_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = str2double(get(hObject, 'String'));
    scannerObj.setGain(input);
    msgbox('Gain Modified')
end

function constantSettings_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = get(hObject, 'Value');
    scannerObj.setConstantSettings(input);    
end

% --- Executes during object creation, after setting all properties.
function gain_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

% --- Executes on button press in portError. - Moved to object
function portError_Callback(hObject, eventdata, handles)
    camera.portErr();
end

function title_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = get(hObject, 'String');
    scannerObj.setTitle(input);
end

% --- Executes during object creation, after setting all properties.
function title_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

% --- Executes on selection change in imgNumber.
function imgNumber_Callback(hObject, eventdata, handles)
    global scannerObj;
    content = cellstr(get(hObject, 'String'));
    input = str2double(content{get(hObject, 'Value')});
    scannerObj.setPicNumber(input);
end

% --- Executes during object creation, after setting all properties.
function imgNumber_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

% --- Executes on button press in approximateFromWavelength.
function approximateFromWavelength_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.appxFromWave();
end

% --- Executes on button press in displaySettings.
function displaySettings_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.displaySettings();
end

function setNumber_Callback(hObject, eventdata, handles)
    global scannerObj;
    input = str2double(get(hObject, 'String'));
    scannerObj.setAvgNumber(input);
end

% --- Executes during object creation, after setting all properties.
function setNumber_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
end

% --- Executes on button press in whiteReference.
function whiteReference_Callback(hObject, eventdata, handles)
    global scannerObj;
    scannerObj.takeSet('white')
    msgbox('White Reference Series Taken and Saved')
end

% --- Creates the GUI figure and creates then returns a handle to it. 
function h1 = scannerGUI_LayoutFcn(policy)
    % policy - create a new figure or use a singleton. 'new' or 'reuse'.

    persistent hsingleton;
    if strcmpi(policy, 'reuse') & ishandle(hsingleton) %#ok<AND2>
        h1 = hsingleton;
        return;
    end

    appdata = [];
    appdata.GUIDEOptions = struct(...
        'active_h', [], ...
        'taginfo', struct(...
        'figure', 2, ...
        'uipanel', 9, ...
        'text', 26, ...
        'edit', 13, ...
        'pushbutton', 20, ...
        'togglebutton', 3, ...
        'popupmenu', 2, ...
        'radiobutton', 3, ...
        'axes', 3, ...
        'checkbox', 5), ...
        'override', 0, ...
        'release', 13, ...
        'resize', 'none', ...
        'accessibility', 'callback', ...
        'mfile', 1, ...
        'callbacks', 1, ...
        'singleton', 1, ...
        'syscolorfig', 1, ...
        'blocking', 0, ...
        'lastSavedFile', 'C:\Users\londep\Documents\MATLAB\scannerGUI.m', ...
        'lastFilename', 'C:\Users\londep\Desktop\PMet\scannerGUI.fig');
    appdata.lastValidTag = 'figure1';
    appdata.GUIDELayoutEditor = [];
    appdata.initTags = struct(...
        'handle', [], ...
        'tag', 'figure1');

    h1 = figure(...
    'Units','characters',...
    'Position',[103.8 29.6153846153846 123.4 31.8461538461538],...
    'Visible','on',...
    'Color',get(0,'defaultfigureColor'),...
    'CurrentAxesMode','manual',...
    'IntegerHandle','off',...
    'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
    'MenuBar','none',...
    'Name','scannerGUI',...
    'NumberTitle','off',...
    'Resize','off',...
    'PaperPosition',get(0,'defaultfigurePaperPosition'),...
    'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
    'ScreenPixelsPerInchMode','manual',...
    'HandleVisibility','callback',...
    'Tag','figure1',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'uipanel2';

    h2 = uipanel(...
    'Parent',h1,...
    'FontUnits',get(0,'defaultuipanelFontUnits'),...
    'Units',get(0,'defaultuipanelUnits'),...
    'Title','Settings',...
    'Position',[0.0275526742301459 0.458937198067633 0.421393841166937 0.444444444444444],...
    'Clipping','off',...
    'Tag','uipanel2',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'text1';

    h3 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'ListboxTop',0,...
    'String','Gain:',...
    'Style','text',...
    'Position',[0.0446428571428571 0.793750000000001 0.299107142857143 0.1375],...
    'Children',[],...
    'Tag','text1',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ); %#ok<*NASGU>

    appdata = [];
    appdata.lastValidTag = 'text2';

    h4 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'ListboxTop',0,...
    'String','Exposure Time:',...
    'Style','text',...
    'Position',[0.0606060606060606 0.478260869565217 0.295454545454545 0.201086956521739],...
    'Children',[],...
    'Tag','text2',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'exposure';

    h5 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'ListboxTop',0,...
    'Min',1,...
    'String','500',...
    'Style','edit',...
    'Position',[0.382575757575758 0.543478260869565 0.348484848484849 0.168478260869565],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('exposure_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('exposure_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','exposure');

    appdata = [];
    appdata.lastValidTag = 'text3';

    h6 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'ListboxTop',0,...
    'String','Wavelength:',...
    'Style','text',...
    'Position',[0.0606060606060606 0.347826086956522 0.299242424242424 0.141304347826087],...
    'Children',[],...
    'Tag','text3',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'text4';

    h7 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','left',...
    'ListboxTop',0,...
    'String','nm',...
    'Style','text',...
    'Position',[0.765151515151515 0.342391304347826 0.200757575757576 0.130434782608696],...
    'Children',[],...
    'Tag','text4',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'text5';

    h8 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','left',...
    'ListboxTop',0,...
    'String','dB',...
    'Style','text',...
    'Position',[0.742143021120294 0.765366430260047 0.193761478420569 0.132663514578408],...
    'Children',[],...
    'Tag','text5',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'text6';

    h9 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','left',...
    'ListboxTop',0,...
    'String','ms',...
    'Style','text',...
    'Position',[0.75 0.543478260869565 0.196969696969697 0.141304347826087],...
    'Children',[],...
    'Tag','text6',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'wavelength';

    h10 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Min',1,...
    'String','550',...
    'Style','edit',...
    'Position',[0.378787878787879 0.331521739130435 0.352272727272727 0.16304347826087],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('wavelength_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('wavelength_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','wavelength');

    appdata = [];
    appdata.lastValidTag = 'gain';

    h11 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Min',1,...
    'SliderStep',[0 0],...
    'String','10',...
    'Style','edit',...
    'Position',[0.382575757575758 0.75 0.340909090909091 0.173913043478261],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('gain_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('gain_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','gain',...
    'UserData',[]);

    appdata = [];
    appdata.lastValidTag = 'approximateFromWavelength';

    h12 = uicontrol(...
    'Parent',h2,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Approximate',...
    'Position',[6.2 1.69230769230769 16.6 2.15384615384615],...
    'Callback',@(hObject,eventdata)scannerGUI('approximateFromWavelength_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','approximateFromWavelength',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'uipanel3';

    h13 = uipanel(...
    'Parent',h1,...
    'FontUnits',get(0,'defaultuipanelFontUnits'),...
    'Units',get(0,'defaultuipanelUnits'),...
    'Title','Capture',...
    'Position',[0.484602917341977 0.072463768115942 0.424635332252836 0.398550724637681],...
    'Clipping','off',...
    'Tag','uipanel3',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'singleImage';

    h14 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'ListboxTop',0,...
    'String','Single Image',...
    'Position',[0.0658914728682171 0.690140845070423 0.375968992248062 0.23943661971831],...
    'Callback',@(hObject,eventdata)scannerGUI('singleImage_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','singleImage',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'imageSeries';

    h15 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'ListboxTop',0,...
    'String','Image Series',...
    'Position',[0.518115942028985 0.14375 0.394927536231884 0.16875],...
    'Callback',@(hObject,eventdata)scannerGUI('imageSeries_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','imageSeries',...
    'UserData',[],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'imgNumber';

    h16 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','33',...
    'Style','edit',...
    'Value',1,...
    'Position',[7.6 3.23076923076923 12.2 2],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('imgNumber_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('imgNumber_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','imgNumber');

    appdata = [];
    appdata.lastValidTag = 'text13';

    h17 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Number of Images:',...
    'Style','text',...
    'Position',[4.2 5.61538461538462 18.8 1.92307692307692],...
    'Children',[],...
    'Tag','text13',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'darkReference';

    h18 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'String','Dark Reference',...
    'Position',[0.518115942028985 0.775 0.391304347826087 0.1625],...
    'Callback',@(hObject,eventdata)scannerGUI('darkReference_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','darkReference',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'text25';

    h19 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Number of Sets:',...
    'Style','text',...
    'Position',[27 7.07692307692308 18.2 1.07692307692308],...
    'Children',[],...
    'ParentMode','manual',...
    'Tag','text25',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'setNumber';

    h20 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','2',...
    'Style','edit',...
    'Position',[29.8 4.38461538461539 12 1.84615384615385],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('setNumber_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'ParentMode','manual',...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('setNumber_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','setNumber');

    appdata = [];
    appdata.lastValidTag = 'whiteReference';

    h21 = uicontrol(...
    'Parent',h13,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','White Reference',...
    'Style',get(0,'defaultuicontrolStyle'),...
    'Position',[4 0.769230769230769 18 1.69230769230769],...
    'Callback',@(hObject,eventdata)scannerGUI('whiteReference_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'ParentMode','manual',...
    'Tag','whiteReference',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'uipanel4';

    h22 = uipanel(...
    'Parent',h1,...
    'FontUnits',get(0,'defaultuipanelFontUnits'),...
    'Units',get(0,'defaultuipanelUnits'),...
    'Title','Connect',...
    'Position',[0.53646677471637 0.71256038647343 0.353322528363047 0.234299516908213],...
    'Clipping','off',...
    'Tag','uipanel4',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'connect';

    h23 = uicontrol(...
    'Parent',h22,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'String','Connect',...
    'Position',[0.181818181818182 0.592592592592593 0.584415584415584 0.37037037037037],...
    'Callback',@(hObject,eventdata)scannerGUI('connect_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','connect',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'disconnect';

    h24 = uicontrol(...
    'Parent',h22,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'String','Disconnect',...
    'Position',[0.181818181818182 0.135802469135802 0.577922077922078 0.382716049382716],...
    'Callback',@(hObject,eventdata)scannerGUI('disconnect_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','disconnect',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'uipanel7';

    h25 = uipanel(...
    'Parent',h1,...
    'FontUnits',get(0,'defaultuipanelFontUnits'),...
    'Units','characters',...
    'Title','File Storage',...
    'Position',[7.4 6.46153846153846 48 6.07692307692308],...
    'Clipping','off',...
    'Tag','uipanel7',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'location';

    h26 = uicontrol(...
    'Parent',h25,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'String','C:/',...
    'Style','edit',...
    'Position',[0.0932203389830508 0.575757575757576 0.860169491525424 0.348484848484849],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('location_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('location_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','location');

    appdata = [];
    appdata.lastValidTag = 'text12';

    h27 = uicontrol(...
    'Parent',h25,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Group Title:',...
    'Style','text',...
    'Position',[2 0.846153846153834 14.4 1.23076923076923],...
    'Children',[],...
    'Tag','text12',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'title';

    h28 = uicontrol(...
    'Parent',h25,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','test',...
    'Style','edit',...
    'Position',[16.2 0.69230769230768 20.2 1.69230769230769],...
    'BackgroundColor',[1 1 1],...
    'Callback',@(hObject,eventdata)scannerGUI('title_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)scannerGUI('title_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
    'Tag','title');

    appdata = [];
    appdata.lastValidTag = 'uipanel6';

    h29 = uipanel(...
    'Parent',h1,...
    'FontUnits',get(0,'defaultuipanelFontUnits'),...
    'Units','characters',...
    'Title','Debugging',...
    'Position',[64.4 15.3076923076923 45.4 6.92307692307692],...
    'Clipping','off',...
    'Tag','uipanel6',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'portError';

    h30 = uicontrol(...
    'Parent',h29,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Port Error',...
    'Position',[5.2 0.692307692307692 14.4 1.84615384615385],...
    'Callback',@(hObject,eventdata)scannerGUI('portError_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','portError',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'displaySettings';

    h31 = uicontrol(...
    'Parent',h29,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Display Settings',...
    'Position',[22.4 0.769230769230769 18.6 1.76923076923077],...
    'Callback',@(hObject,eventdata)scannerGUI('displaySettings_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','displaySettings',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

    appdata = [];
    appdata.lastValidTag = 'constantSettings';

    h32 = uicontrol(...
    'Parent',h29,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','characters',...
    'String','Constant Settings',...
    'Style','checkbox',...
    'Position',[4.8 3.23076923076923 26.6 1.76923076923077],...
    'Callback',@(hObject,eventdata)scannerGUI('constantSettings_Callback',hObject,eventdata,guidata(hObject)),...
    'Children',[],...
    'Tag','constantSettings',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


    hsingleton = h1;
end

% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)
    if ~isempty(appdata)
       names = fieldnames(appdata);
       for i=1:length(names)
           name = char(names(i));
           setappdata(hObject, name, getfield(appdata,name)); %#ok<GFLD>
       end
    end

    if ~isempty(createfcn)
       if isa(createfcn,'function_handle')
           createfcn(hObject, eventdata);
       else
           eval(createfcn);
       end
    end
end

% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

    gui_StateFields =  {'gui_Name'
        'gui_Singleton'
        'gui_OpeningFcn'
        'gui_OutputFcn'
        'gui_LayoutFcn'
        'gui_Callback'};
    gui_Mfile = '';
    for i=1:length(gui_StateFields)
        if ~isfield(gui_State, gui_StateFields{i})
            error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
        elseif isequal(gui_StateFields{i}, 'gui_Name')
            gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
        end
    end

    numargin = length(varargin);

    if numargin == 0
        % scannerGUI
        % create the GUI only if we are not in the process of loading it
        % already
        gui_Create = true;
    elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
        % scannerGUI(ACTIVEX,...)
        vin{1} = gui_State.gui_Name;
        vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
        vin{3} = varargin{1};
        vin{4} = varargin{end-1};
        vin{5} = guidata(varargin{1}.Peer);
        feval(vin{:});
        return;
    elseif local_isInvokeHGCallback(gui_State, varargin{:})
        % scannerGUI('CALLBACK',hObject,eventData,handles,...)
        gui_Create = false;
    else
        % scannerGUI(...)
        % create the GUI and hand varargin to the openingfcn
        gui_Create = true;
    end

    if ~gui_Create
        % In design time, we need to mark all components possibly created in
        % the coming callback evaluation as non-serializable. This way, they
        % will not be brought into GUIDE and not be saved in the figure file
        % when running/saving the GUI from GUIDE.
        designEval = false;
        if (numargin>1 && ishghandle(varargin{2}))
            fig = varargin{2};
            while ~isempty(fig) && ~ishghandle(fig,'figure')
                fig = get(fig,'parent');
            end
            
            designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
        end
            
        if designEval
            beforeChildren = findall(fig);
        end
        
        % evaluate the callback now
        varargin{1} = gui_State.gui_Callback;
        if nargout
            [varargout{1:nargout}] = feval(varargin{:});
        else       
            feval(varargin{:});
        end
        
        % Set serializable of objects created in the above callback to off in
        % design time. Need to check whether figure handle is still valid in
        % case the figure is deleted during the callback dispatching.
        if designEval && ishghandle(fig)
            set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
        end
    else
        if gui_State.gui_Singleton
            gui_SingletonOpt = 'reuse';
        else
            gui_SingletonOpt = 'new';
        end

        % Check user passing 'visible' P/V pair first so that its value can be
        % used by oepnfig to prevent flickering
        gui_Visible = 'auto';
        gui_VisibleInput = '';
        for index=1:2:length(varargin)
            if length(varargin) == index || ~ischar(varargin{index})
                break;
            end

            % Recognize 'visible' P/V pair
            len1 = min(length('visible'),length(varargin{index}));
            len2 = min(length('off'),length(varargin{index+1}));
            if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
                if strncmpi(varargin{index+1},'off',len2)
                    gui_Visible = 'invisible';
                    gui_VisibleInput = 'off';
                elseif strncmpi(varargin{index+1},'on',len2)
                    gui_Visible = 'visible';
                    gui_VisibleInput = 'on';
                end
            end
        end
        
        % Open fig file with stored settings.  Note: This executes all component
        % specific CreateFunctions with an empty HANDLES structure.

        
        % Do feval on layout code in m-file if it exists
        gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
        % this application data is used to indicate the running mode of a GUIDE
        % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
        % only used by actxproxy at this time.   
        setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1); %#ok<DEPGENAM>
        if gui_Exported
            gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

            % make figure invisible here so that the visibility of figure is
            % consistent in OpeningFcn in the exported GUI case
            if isempty(gui_VisibleInput)
                gui_VisibleInput = get(gui_hFigure,'Visible');
            end
            set(gui_hFigure,'Visible','off')

            % openfig (called by local_openfig below) does this for guis without
            % the LayoutFcn. Be sure to do it here so guis show up on screen.
            movegui(gui_hFigure,'onscreen');
        else
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
            % If the figure has InGUIInitialization it was not completely created
            % on the last pass.  Delete this handle and try again.
            if isappdata(gui_hFigure, 'InGUIInitialization')
                delete(gui_hFigure);
                gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
            end
        end
        if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name])) %#ok<DEPGENAM>
            rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name])); %#ok<DEPGENAM>
        end

        % Set flag to indicate starting GUI initialization
        setappdata(gui_hFigure,'InGUIInitialization',1);

        % Fetch GUIDE Application options
        gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
        % Singleton setting in the GUI M-file takes priority if different
        gui_Options.singleton = gui_State.gui_Singleton;

        if ~isappdata(gui_hFigure,'GUIOnScreen')
            % Adjust background color
            if gui_Options.syscolorfig
                set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
            end

            % Generate HANDLES structure and store with GUIDATA. If there is
            % user set GUI data already, keep that also.
            data = guidata(gui_hFigure);
            handles = guihandles(gui_hFigure);
            if ~isempty(handles)
                if isempty(data)
                    data = handles;
                else
                    names = fieldnames(handles);
                    for k=1:length(names)
                        data.(char(names(k)))=handles.(char(names(k)));
                    end
                end
            end
            guidata(gui_hFigure, data);
        end

        % Apply input P/V pairs other than 'visible'
        for index=1:2:length(varargin)
            if length(varargin) == index || ~ischar(varargin{index})
                break;
            end

            len1 = min(length('visible'),length(varargin{index}));
            if ~strncmpi(varargin{index},'visible',len1)
                try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end %#ok<SEPEX>
            end
        end

        % If handle visibility is set to 'callback', turn it on until finished
        % with OpeningFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end

        feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

        if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
            % Handle the default callbacks of predefined toolbar tools in this
            % GUI, if any
            guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
            
            % Update handle visibility
            set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

            % Call openfig again to pick up the saved visibility or apply the
            % one passed in from the P/V pairs
            if ~gui_Exported
                gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
            elseif ~isempty(gui_VisibleInput)
                set(gui_hFigure,'Visible',gui_VisibleInput);
            end
            if strcmpi(get(gui_hFigure, 'Visible'), 'on')
                figure(gui_hFigure);
                
                if gui_Options.singleton
                    setappdata(gui_hFigure,'GUIOnScreen', 1);
                end
            end

            % Done with GUI initialization
            if isappdata(gui_hFigure,'InGUIInitialization')
                rmappdata(gui_hFigure,'InGUIInitialization');
            end

            % If handle visibility is set to 'callback', turn it on until
            % finished with OutputFcn
            gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
            if strcmp(gui_HandleVisibility, 'callback')
                set(gui_hFigure,'HandleVisibility', 'on');
            end
            gui_Handles = guidata(gui_hFigure);
        else
            gui_Handles = [];
        end

        if nargout
            [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
        else
            feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
        end

        if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
            set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
        end
    end
    end

    function gui_hFigure = local_openfig(name, singleton, visible)

    % openfig with three arguments was new from R13. Try to call that first, if
    % failed, try the old openfig.
    if nargin('openfig') == 2
        % OPENFIG did not accept 3rd input argument until R13,
        % toggle default figure visible to prevent the figure
        % from showing up too soon.
        gui_OldDefaultVisible = get(0,'defaultFigureVisible');
        set(0,'defaultFigureVisible','off');
        gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
        set(0,'defaultFigureVisible',gui_OldDefaultVisible);
    else
        % Call version of openfig that accepts 'auto' option"
        gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
    %     %workaround for CreateFcn not called to create ActiveX
    %         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
    %         for i=1:length(peers)
    %             if isappdata(peers(i),'Control')
    %                 actxproxy(peers(i));
    %             end            
    %         end
    end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)
    try
        result = ispc && iscom(varargin{1}) ...
                 && isequal(varargin{1},gcbo);
    catch
        result = false;
    end
end

function result = local_isInvokeHGCallback(gui_State, varargin)
    try
        fhandle = functions(gui_State.gui_Callback);
        result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
                 (ischar(varargin{1}) ...
                 && isequal(ishghandle(varargin{2}), 1) ...
                 && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                    ~isempty(strfind(varargin{1}, '_CreateFcn'))) ); %#ok<FSTR>
    catch
        result = false;
    end
end